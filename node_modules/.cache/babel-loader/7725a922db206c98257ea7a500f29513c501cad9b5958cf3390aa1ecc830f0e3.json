{"ast":null,"code":"function parseDate(date) {\n  if (typeof date === \"number\") {\n    var dateSeconds = new Date(date * 1000).toString();\n    const arr = dateSeconds.split(' ');\n    let month = arr[1];\n    let day = arr[2];\n    let year = arr[3];\n    let hour = arr[4];\n\n    //remove os segundos\n    // var seconds = hour.lastIndexOf(\":\");\n    // hour = hour.substring(0, seconds);\n\n    switch (month) {\n      case \"Jan\":\n        month = \"01\";\n        break;\n      case \"Feb\":\n        month = \"02\";\n        break;\n      case \"Mar\":\n        month = \"03\";\n        break;\n      case \"Apr\":\n        month = \"04\";\n        break;\n      case \"May\":\n        month = \"05\";\n        break;\n      case \"Jun\":\n        month = \"06\";\n        break;\n      case \"Jul\":\n        month = \"07\";\n        break;\n      case \"Aug\":\n        month = \"08\";\n        break;\n      case \"Sep\":\n        month = \"09\";\n        break;\n      case \"Ouc\":\n        month = \"10\";\n        break;\n      case \"Nov\":\n        month = \"11\";\n        break;\n      default:\n        month = \"12\";\n        break;\n    }\n    return {\n      day: day + \"/\" + month + \"/\" + year,\n      hour: hour\n    };\n  }\n  return null;\n}\nfunction parseMemory(megabyte) {\n  if (typeof megabyte === \"number\") {\n    console.log(megabyte);\n  }\n}\nconst DataParse = {\n  parseDate,\n  parseMemory\n};\nexport default DataParse;","map":{"version":3,"names":["parseDate","date","dateSeconds","Date","toString","arr","split","month","day","year","hour","parseMemory","megabyte","console","log","DataParse"],"sources":["/home/lapti/ambiente-monitoramento-servicos/src/helpers/DataParse.jsx"],"sourcesContent":["function parseDate(date){\n    if(typeof date === \"number\"){\n        var dateSeconds = new Date(date * 1000).toString();\n        const arr = dateSeconds.split(' ');\n        let month = arr[1]\n        let day = arr[2]\n        let year = arr[3]\n        let hour = arr[4]\n        \n        //remove os segundos\n        // var seconds = hour.lastIndexOf(\":\");\n        // hour = hour.substring(0, seconds);\n\n        switch(month){\n            case \"Jan\":\n                month = \"01\";\n                break;\n            case \"Feb\":\n                month = \"02\";\n                break;\n            case \"Mar\":\n                month = \"03\";\n                break;\n            case \"Apr\":\n                month = \"04\";\n                break;\n            case \"May\":\n                month = \"05\";\n                break;\n            case \"Jun\":\n                month = \"06\";\n                break;\n            case \"Jul\":\n                month = \"07\";\n                break;\n            case \"Aug\":\n                month = \"08\";\n                break;\n            case \"Sep\":\n                month = \"09\";\n                break;\n            case \"Ouc\":\n                month = \"10\";\n                break;\n            case \"Nov\":\n                month = \"11\";\n                break\n            default:\n                month = \"12\";\n                break;\n        }\n\n        return {\n            day: day + \"/\" + month + \"/\" + year,\n            hour: hour,\n        }\n    }\n    return null;\n}\n\nfunction parseMemory(megabyte){\n    if(typeof megabyte === \"number\"){\n        console.log(megabyte);\n    }\n}\n\nconst DataParse = {\n    parseDate,\n    parseMemory,\n}\n\nexport default DataParse;"],"mappings":"AAAA,SAASA,SAAS,CAACC,IAAI,EAAC;EACpB,IAAG,OAAOA,IAAI,KAAK,QAAQ,EAAC;IACxB,IAAIC,WAAW,GAAG,IAAIC,IAAI,CAACF,IAAI,GAAG,IAAI,CAAC,CAACG,QAAQ,EAAE;IAClD,MAAMC,GAAG,GAAGH,WAAW,CAACI,KAAK,CAAC,GAAG,CAAC;IAClC,IAAIC,KAAK,GAAGF,GAAG,CAAC,CAAC,CAAC;IAClB,IAAIG,GAAG,GAAGH,GAAG,CAAC,CAAC,CAAC;IAChB,IAAII,IAAI,GAAGJ,GAAG,CAAC,CAAC,CAAC;IACjB,IAAIK,IAAI,GAAGL,GAAG,CAAC,CAAC,CAAC;;IAEjB;IACA;IACA;;IAEA,QAAOE,KAAK;MACR,KAAK,KAAK;QACNA,KAAK,GAAG,IAAI;QACZ;MACJ,KAAK,KAAK;QACNA,KAAK,GAAG,IAAI;QACZ;MACJ,KAAK,KAAK;QACNA,KAAK,GAAG,IAAI;QACZ;MACJ,KAAK,KAAK;QACNA,KAAK,GAAG,IAAI;QACZ;MACJ,KAAK,KAAK;QACNA,KAAK,GAAG,IAAI;QACZ;MACJ,KAAK,KAAK;QACNA,KAAK,GAAG,IAAI;QACZ;MACJ,KAAK,KAAK;QACNA,KAAK,GAAG,IAAI;QACZ;MACJ,KAAK,KAAK;QACNA,KAAK,GAAG,IAAI;QACZ;MACJ,KAAK,KAAK;QACNA,KAAK,GAAG,IAAI;QACZ;MACJ,KAAK,KAAK;QACNA,KAAK,GAAG,IAAI;QACZ;MACJ,KAAK,KAAK;QACNA,KAAK,GAAG,IAAI;QACZ;MACJ;QACIA,KAAK,GAAG,IAAI;QACZ;IAAM;IAGd,OAAO;MACHC,GAAG,EAAEA,GAAG,GAAG,GAAG,GAAGD,KAAK,GAAG,GAAG,GAAGE,IAAI;MACnCC,IAAI,EAAEA;IACV,CAAC;EACL;EACA,OAAO,IAAI;AACf;AAEA,SAASC,WAAW,CAACC,QAAQ,EAAC;EAC1B,IAAG,OAAOA,QAAQ,KAAK,QAAQ,EAAC;IAC5BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACzB;AACJ;AAEA,MAAMG,SAAS,GAAG;EACdf,SAAS;EACTW;AACJ,CAAC;AAED,eAAeI,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}