{"ast":null,"code":"function parseDate(date) {\n  if (typeof number) {\n    var dateSeconds = new Date(date * 1000).toString();\n    const arr = dateSeconds.split(' ');\n    let month = arr[1];\n    let day = arr[2];\n    let year = arr[3];\n    let hour = arr[4];\n    var seconds = hour.lastIndexOf(\":\");\n    hour = hour.substring(0, seconds);\n    switch (month) {\n      case \"Jan\":\n        {\n          month = \"01\";\n        }\n        break;\n      case \"Feb\":\n        {\n          month = \"02\";\n        }\n        break;\n      case \"Mar\":\n        {\n          month = \"03\";\n        }\n      case \"Apr\":\n        {\n          month = \"04\";\n        }\n        break;\n      case \"May\":\n        {\n          month = \"05\";\n        }\n        break;\n      case \"Jun\":\n        {\n          month = \"06\";\n        }\n        break;\n      case \"Jul\":\n        {\n          month = \"07\";\n        }\n        break;\n      case \"Aug\":\n        {\n          month = \"08\";\n        }\n        break;\n      case \"Sep\":\n        {\n          month = \"09\";\n        }\n        break;\n      case \"Ouc\":\n        {\n          month = \"10\";\n        }\n        break;\n      case \"Nov\":\n        {\n          month = \"11\";\n        }\n        break;\n      default:\n        {\n          month = \"12\";\n        }\n        break;\n    }\n    return {\n      day: day + \"/\" + month + \"/\" + year,\n      hour: hour\n    };\n  }\n  return null;\n  // eslint-disable-next-line\n}\n\nconst DataParse = {\n  parseDate\n};\nexport default DataParse;","map":{"version":3,"names":["parseDate","date","number","dateSeconds","Date","toString","arr","split","month","day","year","hour","seconds","lastIndexOf","substring","DataParse"],"sources":["/home/lapti/ambiente-monitoramento-servicos/src/helpers/DataParse.jsx"],"sourcesContent":["function parseDate(date){\n    if(typeof number){\n        var dateSeconds = new Date(date * 1000).toString();\n        const arr = dateSeconds.split(' ');\n        let month = arr[1]\n        let day = arr[2]\n        let year = arr[3]\n        let hour = arr[4]\n\n        var seconds = hour.lastIndexOf(\":\");\n        hour = hour.substring(0, seconds);\n\n        switch(month){\n            case \"Jan\": {\n                month = \"01\";\n            }\n                break;\n            case \"Feb\": {\n                month = \"02\";\n            }\n                break;\n            case \"Mar\": {\n                month = \"03\";\n            }\n            case \"Apr\": {\n                month = \"04\";\n            }\n                break;\n            case \"May\": {\n                month = \"05\";\n            }\n                break;\n            case \"Jun\": {\n                month = \"06\";\n            }\n                break;\n            case \"Jul\": {\n                month = \"07\";\n            }\n                break;\n            case \"Aug\": {\n                month = \"08\";\n            }\n                break;\n            case \"Sep\": {\n                month = \"09\";\n            }\n                break;\n            case \"Ouc\": {\n                month = \"10\";\n            }\n                break;\n            case \"Nov\": {\n                month = \"11\";\n            }\n                break\n            default: {\n                month = \"12\";\n            }\n                break;\n        }\n\n        return {\n            day: day + \"/\" + month + \"/\" + year,\n            hour: hour,\n        }\n    }\n    return null;\n    // eslint-disable-next-line\n}\n\nconst DataParse = {\n    parseDate,\n}\n\nexport default DataParse;"],"mappings":"AAAA,SAASA,SAAS,CAACC,IAAI,EAAC;EACpB,IAAG,OAAOC,MAAM,EAAC;IACb,IAAIC,WAAW,GAAG,IAAIC,IAAI,CAACH,IAAI,GAAG,IAAI,CAAC,CAACI,QAAQ,EAAE;IAClD,MAAMC,GAAG,GAAGH,WAAW,CAACI,KAAK,CAAC,GAAG,CAAC;IAClC,IAAIC,KAAK,GAAGF,GAAG,CAAC,CAAC,CAAC;IAClB,IAAIG,GAAG,GAAGH,GAAG,CAAC,CAAC,CAAC;IAChB,IAAII,IAAI,GAAGJ,GAAG,CAAC,CAAC,CAAC;IACjB,IAAIK,IAAI,GAAGL,GAAG,CAAC,CAAC,CAAC;IAEjB,IAAIM,OAAO,GAAGD,IAAI,CAACE,WAAW,CAAC,GAAG,CAAC;IACnCF,IAAI,GAAGA,IAAI,CAACG,SAAS,CAAC,CAAC,EAAEF,OAAO,CAAC;IAEjC,QAAOJ,KAAK;MACR,KAAK,KAAK;QAAE;UACRA,KAAK,GAAG,IAAI;QAChB;QACI;MACJ,KAAK,KAAK;QAAE;UACRA,KAAK,GAAG,IAAI;QAChB;QACI;MACJ,KAAK,KAAK;QAAE;UACRA,KAAK,GAAG,IAAI;QAChB;MACA,KAAK,KAAK;QAAE;UACRA,KAAK,GAAG,IAAI;QAChB;QACI;MACJ,KAAK,KAAK;QAAE;UACRA,KAAK,GAAG,IAAI;QAChB;QACI;MACJ,KAAK,KAAK;QAAE;UACRA,KAAK,GAAG,IAAI;QAChB;QACI;MACJ,KAAK,KAAK;QAAE;UACRA,KAAK,GAAG,IAAI;QAChB;QACI;MACJ,KAAK,KAAK;QAAE;UACRA,KAAK,GAAG,IAAI;QAChB;QACI;MACJ,KAAK,KAAK;QAAE;UACRA,KAAK,GAAG,IAAI;QAChB;QACI;MACJ,KAAK,KAAK;QAAE;UACRA,KAAK,GAAG,IAAI;QAChB;QACI;MACJ,KAAK,KAAK;QAAE;UACRA,KAAK,GAAG,IAAI;QAChB;QACI;MACJ;QAAS;UACLA,KAAK,GAAG,IAAI;QAChB;QACI;IAAM;IAGd,OAAO;MACHC,GAAG,EAAEA,GAAG,GAAG,GAAG,GAAGD,KAAK,GAAG,GAAG,GAAGE,IAAI;MACnCC,IAAI,EAAEA;IACV,CAAC;EACL;EACA,OAAO,IAAI;EACX;AACJ;;AAEA,MAAMI,SAAS,GAAG;EACdf;AACJ,CAAC;AAED,eAAee,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}