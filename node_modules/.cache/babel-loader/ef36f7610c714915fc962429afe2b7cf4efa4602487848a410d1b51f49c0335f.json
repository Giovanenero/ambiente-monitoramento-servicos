{"ast":null,"code":"import http from \"./http-common\";\nimport DataParse from \"../helpers/DataParse\";\nimport { resolve } from \"chart.js/dist/helpers/helpers.options\";\n\n//função que retorna as informações do usuário pelo token\nfunction infouser(token) {\n  return http.post(\"/getuser/\", {\n    token\n  }).then(response => {\n    return response.data;\n  }).catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários do sistema\nfunction systemusers(token) {\n  return http.post(\"/getsystemusers/\", {\n    token\n  }).then(response => {\n    let aux = [];\n    // let userTimeAction = function(data) {\n    //     let aux = [];\n    //     const teste2 = async (user) => {\n    //         const teste = async (user) => {\n    //             return new Promise(resolve => {\n    //                 useraccess(token, user.userId)\n    //                 .then(userData => {\n    //                     if(userData){\n    //                         // let time = DataParse.parseDate(userData[0].date)\n    //                         // if(time){\n    //                         //     aux.push({\n    //                         //         ...user,\n    //                         //         lastTimeOnline: time.day + \" às \" + time.hour,\n    //                         //         lastAction: userData[0].jobType,\n    //                         //     })\n    //                         // }\n    //                         console.log(userData);\n    //                         resolve();\n    //                     }\n    //                 })\n    //                 .catch(error => console.log(error));\n    //                 })\n    //         }\n    //         await teste(user);\n    //     }\n    //     // data.forEach(user => {\n    //     //     teste2(user)\n    //     // })\n    //     return aux;\n    // }\n    if (response.data.length > 0) {\n      let data = response.data;\n      console.log(data);\n      data.forEach(user => {\n        //let newUser = null;\n        let teste1 = async () => {\n          return new Promise(resolve => {\n            useraccess(token, user.userId).then(userData => {\n              console.log(userData);\n              resolve();\n            }).catch(error => console.log(error));\n          });\n        };\n        teste1();\n      });\n      return response.data;\n    } else {\n      return aux;\n    }\n  }).catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários online\nfunction systemlogs(token) {\n  // eslint-disable-next-line \n  return http.post(\"/getloggedusers/\", {\n    token\n  }).then(response => {\n    return response.data;\n  }).catch(error => console.log(error));\n}\n\n//função que retorna os registros do sistema de um usuário em específico pelo seu ID\nfunction useraccess(token, id) {\n  return http.post(\"/getsystemlogsbyuserid/\", {\n    token,\n    id\n  }).then(response => {\n    return response.data;\n  }).catch(error => console.log(error));\n}\nconst endpoint = {\n  systemusers,\n  systemlogs,\n  useraccess,\n  infouser\n};\nexport default endpoint;","map":{"version":3,"names":["http","DataParse","resolve","infouser","token","post","then","response","data","catch","error","console","log","systemusers","aux","length","forEach","user","teste1","Promise","useraccess","userId","userData","systemlogs","id","endpoint"],"sources":["/home/lapti/ambiente-monitoramento-servicos/src/endpoint/SystemUsers.jsx"],"sourcesContent":["import http from \"./http-common\";\nimport DataParse from \"../helpers/DataParse\";\nimport { resolve } from \"chart.js/dist/helpers/helpers.options\";\n\n//função que retorna as informações do usuário pelo token\nfunction infouser(token){\n    return http\n        .post(\"/getuser/\", {token})\n        .then(response => {return response.data})\n        .catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários do sistema\nfunction systemusers(token){\n    return http\n        .post(\"/getsystemusers/\", {\n            token,\n        })\n        .then(response => {\n            let aux = [];\n            // let userTimeAction = function(data) {\n            //     let aux = [];\n            //     const teste2 = async (user) => {\n            //         const teste = async (user) => {\n            //             return new Promise(resolve => {\n            //                 useraccess(token, user.userId)\n            //                 .then(userData => {\n            //                     if(userData){\n            //                         // let time = DataParse.parseDate(userData[0].date)\n            //                         // if(time){\n            //                         //     aux.push({\n            //                         //         ...user,\n            //                         //         lastTimeOnline: time.day + \" às \" + time.hour,\n            //                         //         lastAction: userData[0].jobType,\n            //                         //     })\n            //                         // }\n            //                         console.log(userData);\n            //                         resolve();\n            //                     }\n            //                 })\n            //                 .catch(error => console.log(error));\n            //                 })\n            //         }\n            //         await teste(user);\n            //     }\n            //     // data.forEach(user => {\n            //     //     teste2(user)\n            //     // })\n            //     return aux;\n            // }\n            if(response.data.length > 0){\n                let data = response.data;\n                console.log(data);\n                data.forEach(user => {\n                    //let newUser = null;\n                    let teste1 = async () => {\n                        return new Promise(resolve => {\n                            useraccess(token, user.userId)\n                            .then(userData => {\n                                console.log(userData);\n                                resolve();\n                            })\n                            .catch(error => console.log(error));\n                        })\n                    }\n                    teste1();\n                })\n                return response.data;\n            } else {\n                return aux;\n            }\n\n        })\n        .catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários online\nfunction systemlogs(token){\n    // eslint-disable-next-line \n    return http.\n        post(\"/getloggedusers/\", {\n            token,\n        })\n        .then(response => {\n            return response.data;\n        })\n        .catch(error => console.log(error));\n}\n\n//função que retorna os registros do sistema de um usuário em específico pelo seu ID\nfunction useraccess(token, id){\n    return http.post(\"/getsystemlogsbyuserid/\", {\n        token,\n        id,\n    })\n    .then(response => {return response.data})\n    .catch(error => console.log(error))\n}\n\nconst endpoint = {\n    systemusers,\n    systemlogs,\n    useraccess,\n    infouser,\n};\n\nexport default endpoint;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,eAAe;AAChC,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,OAAO,QAAQ,uCAAuC;;AAE/D;AACA,SAASC,QAAQ,CAACC,KAAK,EAAC;EACpB,OAAOJ,IAAI,CACNK,IAAI,CAAC,WAAW,EAAE;IAACD;EAAK,CAAC,CAAC,CAC1BE,IAAI,CAACC,QAAQ,IAAI;IAAC,OAAOA,QAAQ,CAACC,IAAI;EAAA,CAAC,CAAC,CACxCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AAC3C;;AAEA;AACA,SAASG,WAAW,CAACT,KAAK,EAAC;EACvB,OAAOJ,IAAI,CACNK,IAAI,CAAC,kBAAkB,EAAE;IACtBD;EACJ,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAI;IACd,IAAIO,GAAG,GAAG,EAAE;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAGP,QAAQ,CAACC,IAAI,CAACO,MAAM,GAAG,CAAC,EAAC;MACxB,IAAIP,IAAI,GAAGD,QAAQ,CAACC,IAAI;MACxBG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACjBA,IAAI,CAACQ,OAAO,CAACC,IAAI,IAAI;QACjB;QACA,IAAIC,MAAM,GAAG,YAAY;UACrB,OAAO,IAAIC,OAAO,CAACjB,OAAO,IAAI;YAC1BkB,UAAU,CAAChB,KAAK,EAAEa,IAAI,CAACI,MAAM,CAAC,CAC7Bf,IAAI,CAACgB,QAAQ,IAAI;cACdX,OAAO,CAACC,GAAG,CAACU,QAAQ,CAAC;cACrBpB,OAAO,EAAE;YACb,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;UACvC,CAAC,CAAC;QACN,CAAC;QACDQ,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,OAAOX,QAAQ,CAACC,IAAI;IACxB,CAAC,MAAM;MACH,OAAOM,GAAG;IACd;EAEJ,CAAC,CAAC,CACDL,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AAC3C;;AAEA;AACA,SAASa,UAAU,CAACnB,KAAK,EAAC;EACtB;EACA,OAAOJ,IAAI,CACPK,IAAI,CAAC,kBAAkB,EAAE;IACrBD;EACJ,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAI;IACd,OAAOA,QAAQ,CAACC,IAAI;EACxB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AAC3C;;AAEA;AACA,SAASU,UAAU,CAAChB,KAAK,EAAEoB,EAAE,EAAC;EAC1B,OAAOxB,IAAI,CAACK,IAAI,CAAC,yBAAyB,EAAE;IACxCD,KAAK;IACLoB;EACJ,CAAC,CAAC,CACDlB,IAAI,CAACC,QAAQ,IAAI;IAAC,OAAOA,QAAQ,CAACC,IAAI;EAAA,CAAC,CAAC,CACxCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AACvC;AAEA,MAAMe,QAAQ,GAAG;EACbZ,WAAW;EACXU,UAAU;EACVH,UAAU;EACVjB;AACJ,CAAC;AAED,eAAesB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}