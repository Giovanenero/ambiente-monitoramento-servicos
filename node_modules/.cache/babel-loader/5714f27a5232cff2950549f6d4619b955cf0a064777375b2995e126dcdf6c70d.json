{"ast":null,"code":"import DataParse from \"../helpers/DataParse\";\nimport http from \"./http-common\";\n\n//função que retorna as informações do usuário pelo token\nfunction infouser(token) {\n  return http.post(\"/getuser/\", {\n    token\n  }).then(response => {\n    return response.data;\n  }).catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários do sistema\nfunction systemusers(token) {\n  return http.post(\"/getsystemusers/\", {\n    token\n  }).then(response => {\n    let length = 0;\n    const wait = async data => {\n      let auxData = [];\n      data.forEach(user => {\n        useraccess(token, user.userId).then(userData => {\n          if (userData.length > 0) {\n            auxData.push({\n              ...user,\n              lastTimeOnline: userData[0].date,\n              lastAction: userData[0].jobType\n            });\n          } else {\n            auxData.push(user);\n          }\n          length++;\n          if (length === data.lenght) {\n            console.log(\"asdjfoasfjiasejf\");\n            return auxData;\n          }\n        }).catch(error => console.log(error));\n      });\n    };\n    if (response.data.length > 0) {\n      let data = response.data;\n      const teste = async () => {\n        await wait(data);\n      };\n      teste();\n    }\n    return [];\n  }).catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários online\nfunction systemlogs(token) {\n  // eslint-disable-next-line \n  return http.post(\"/getloggedusers/\", {\n    token\n  }).then(response => {\n    return response.data;\n  }).catch(error => console.log(error));\n}\n\n//função que retorna os registros do sistema de um usuário em específico pelo seu ID\nfunction useraccess(token, id) {\n  return http.post(\"/getsystemlogsbyuserid/\", {\n    token,\n    id\n  }).then(response => {\n    return response.data;\n  }).catch(error => console.log(error));\n}\nconst endpoint = {\n  systemusers,\n  systemlogs,\n  useraccess,\n  infouser\n};\nexport default endpoint;","map":{"version":3,"names":["DataParse","http","infouser","token","post","then","response","data","catch","error","console","log","systemusers","length","wait","auxData","forEach","user","useraccess","userId","userData","push","lastTimeOnline","date","lastAction","jobType","lenght","teste","systemlogs","id","endpoint"],"sources":["/home/lapti/ambiente-monitoramento-servicos/src/endpoint/SystemUsers.jsx"],"sourcesContent":["import DataParse from \"../helpers/DataParse\";\nimport http from \"./http-common\";\n\n//função que retorna as informações do usuário pelo token\nfunction infouser(token){\n    return http\n        .post(\"/getuser/\", {token})\n        .then(response => {return response.data})\n        .catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários do sistema\nfunction systemusers(token){\n    return http\n        .post(\"/getsystemusers/\", {\n            token,\n        })\n        .then(response => {\n            let length = 0;\n            const wait = async (data) => {\n                let auxData = [];\n                data.forEach(user => {\n                    useraccess(token, user.userId)\n                    .then(userData => {\n                        if(userData.length > 0){\n                            auxData.push({\n                                ...user,\n                                lastTimeOnline: userData[0].date,\n                                lastAction: userData[0].jobType,\n                            })\n                        } else {\n                            auxData.push(user);\n                        }\n                        length++;\n                        if(length === data.lenght){\n                            console.log(\"asdjfoasfjiasejf\")\n                            return auxData;\n                        }\n                    })\n                    .catch(error => console.log(error));\n                })\n            }\n\n            if(response.data.length > 0){\n                let data = response.data;\n                const teste = async () => {\n                    await wait(data);\n                }\n                teste();\n            }\n            return [];\n        })\n        .catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários online\nfunction systemlogs(token){\n    // eslint-disable-next-line \n    return http.\n        post(\"/getloggedusers/\", {\n            token,\n        })\n        .then(response => {\n            return response.data;\n        })\n        .catch(error => console.log(error));\n}\n\n//função que retorna os registros do sistema de um usuário em específico pelo seu ID\nfunction useraccess(token, id){\n    return http.post(\"/getsystemlogsbyuserid/\", {\n        token,\n        id,\n    })\n    .then(response => {return response.data})\n    .catch(error => console.log(error))\n}\n\nconst endpoint = {\n    systemusers,\n    systemlogs,\n    useraccess,\n    infouser,\n};\n\nexport default endpoint;"],"mappings":"AAAA,OAAOA,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,IAAI,MAAM,eAAe;;AAEhC;AACA,SAASC,QAAQ,CAACC,KAAK,EAAC;EACpB,OAAOF,IAAI,CACNG,IAAI,CAAC,WAAW,EAAE;IAACD;EAAK,CAAC,CAAC,CAC1BE,IAAI,CAACC,QAAQ,IAAI;IAAC,OAAOA,QAAQ,CAACC,IAAI;EAAA,CAAC,CAAC,CACxCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AAC3C;;AAEA;AACA,SAASG,WAAW,CAACT,KAAK,EAAC;EACvB,OAAOF,IAAI,CACNG,IAAI,CAAC,kBAAkB,EAAE;IACtBD;EACJ,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAI;IACd,IAAIO,MAAM,GAAG,CAAC;IACd,MAAMC,IAAI,GAAG,MAAOP,IAAI,IAAK;MACzB,IAAIQ,OAAO,GAAG,EAAE;MAChBR,IAAI,CAACS,OAAO,CAACC,IAAI,IAAI;QACjBC,UAAU,CAACf,KAAK,EAAEc,IAAI,CAACE,MAAM,CAAC,CAC7Bd,IAAI,CAACe,QAAQ,IAAI;UACd,IAAGA,QAAQ,CAACP,MAAM,GAAG,CAAC,EAAC;YACnBE,OAAO,CAACM,IAAI,CAAC;cACT,GAAGJ,IAAI;cACPK,cAAc,EAAEF,QAAQ,CAAC,CAAC,CAAC,CAACG,IAAI;cAChCC,UAAU,EAAEJ,QAAQ,CAAC,CAAC,CAAC,CAACK;YAC5B,CAAC,CAAC;UACN,CAAC,MAAM;YACHV,OAAO,CAACM,IAAI,CAACJ,IAAI,CAAC;UACtB;UACAJ,MAAM,EAAE;UACR,IAAGA,MAAM,KAAKN,IAAI,CAACmB,MAAM,EAAC;YACtBhB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;YAC/B,OAAOI,OAAO;UAClB;QACJ,CAAC,CAAC,CACDP,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;MACvC,CAAC,CAAC;IACN,CAAC;IAED,IAAGH,QAAQ,CAACC,IAAI,CAACM,MAAM,GAAG,CAAC,EAAC;MACxB,IAAIN,IAAI,GAAGD,QAAQ,CAACC,IAAI;MACxB,MAAMoB,KAAK,GAAG,YAAY;QACtB,MAAMb,IAAI,CAACP,IAAI,CAAC;MACpB,CAAC;MACDoB,KAAK,EAAE;IACX;IACA,OAAO,EAAE;EACb,CAAC,CAAC,CACDnB,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AAC3C;;AAEA;AACA,SAASmB,UAAU,CAACzB,KAAK,EAAC;EACtB;EACA,OAAOF,IAAI,CACPG,IAAI,CAAC,kBAAkB,EAAE;IACrBD;EACJ,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAI;IACd,OAAOA,QAAQ,CAACC,IAAI;EACxB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AAC3C;;AAEA;AACA,SAASS,UAAU,CAACf,KAAK,EAAE0B,EAAE,EAAC;EAC1B,OAAO5B,IAAI,CAACG,IAAI,CAAC,yBAAyB,EAAE;IACxCD,KAAK;IACL0B;EACJ,CAAC,CAAC,CACDxB,IAAI,CAACC,QAAQ,IAAI;IAAC,OAAOA,QAAQ,CAACC,IAAI;EAAA,CAAC,CAAC,CACxCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AACvC;AAEA,MAAMqB,QAAQ,GAAG;EACblB,WAAW;EACXgB,UAAU;EACVV,UAAU;EACVhB;AACJ,CAAC;AAED,eAAe4B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}