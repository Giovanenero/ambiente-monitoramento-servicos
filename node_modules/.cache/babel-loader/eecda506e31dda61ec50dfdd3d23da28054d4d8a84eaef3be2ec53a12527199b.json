{"ast":null,"code":"import http from \"./http-common\";\nimport DataParse from \"../helpers/DataParse\";\n\n//função que retorna as informações do usuário pelo token\nfunction infouser(token) {\n  return http.post(\"/getuser/\", {\n    token\n  }).then(response => {\n    return response.data;\n  }).catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários do sistema\nfunction systemusers(token) {\n  return http.post(\"/getsystemusers/\", {\n    token\n  }).then(response => {\n    let userTimeAction = function (data) {\n      let aux = [];\n      const teste = async user => {\n        return new Promise(resolve => {\n          useraccess(token, user.userId).then(userData => {\n            if (userData.length > 0) {\n              let time = DataParse.parseDate(userData[0].date);\n              if (time) {\n                aux.push({\n                  ...user,\n                  lastTimeOnline: time.day + \" às \" + time.hour,\n                  lastAction: userData[0].jobType\n                });\n              }\n              resolve();\n            }\n          }).catch(error => console.log(error));\n        });\n      };\n      data.forEach(user => {\n        teste(user);\n      });\n      return aux;\n    };\n    if (response.data) {\n      let data = response.data;\n      let aux = null;\n      aux = userTimeAction(data);\n      return aux;\n    }\n    // if(response.data){\n    //     let teste = async (userId) => {\n    //         return new Promise((resolve) => {\n    //             useraccess(token, userId)\n    //             .then(data => {\n    //                 if(data !== undefined && data.length > 0){\n    //                     console.log(data);\n    //                     let time = DataParse.parseDate(data[0].date);\n    //                     if(time){\n    //                         newAux = {\n    //                             time: time.day + \" às \" + time.hour,\n    //                             action: data.jobType,\n    //                         }\n    //                     }\n    //                 } \n    //                 resolve();\n    //             })\n    //             .catch(error => console.log(error));\n    //         })\n    //     }\n    //     return auxData;\n    // }\n  }).catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários online\nfunction systemlogs(token) {\n  // eslint-disable-next-line \n  return http.post(\"/getloggedusers/\", {\n    token\n  }).then(response => {\n    return response.data;\n  }).catch(error => console.log(error));\n}\n\n//função que retorna os registros do sistema de um usuário em específico pelo seu ID\nfunction useraccess(token, id) {\n  return http.post(\"/getsystemlogsbyuserid/\", {\n    token,\n    id\n  }).then(response => {\n    return response.data;\n  }).catch(error => console.log(error));\n}\nconst endpoint = {\n  systemusers,\n  systemlogs,\n  useraccess,\n  infouser\n};\nexport default endpoint;","map":{"version":3,"names":["http","DataParse","infouser","token","post","then","response","data","catch","error","console","log","systemusers","userTimeAction","aux","teste","user","Promise","resolve","useraccess","userId","userData","length","time","parseDate","date","push","lastTimeOnline","day","hour","lastAction","jobType","forEach","systemlogs","id","endpoint"],"sources":["/home/lapti/ambiente-monitoramento-servicos/src/endpoint/SystemUsers.jsx"],"sourcesContent":["import http from \"./http-common\";\nimport DataParse from \"../helpers/DataParse\";\n\n//função que retorna as informações do usuário pelo token\nfunction infouser(token){\n    return http\n        .post(\"/getuser/\", {token})\n        .then(response => {return response.data})\n        .catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários do sistema\nfunction systemusers(token){\n    return http\n        .post(\"/getsystemusers/\", {\n            token,\n        })\n        .then(response => {\n            let userTimeAction = function(data) {\n                let aux = [];\n                const teste = async (user) => {\n                    return new Promise(resolve => {\n                        useraccess(token, user.userId)\n                        .then(userData => {\n                            if(userData.length > 0){\n                                let time = DataParse.parseDate(userData[0].date)\n                                if(time){\n                                    aux.push({\n                                        ...user,\n                                        lastTimeOnline: time.day + \" às \" + time.hour,\n                                        lastAction: userData[0].jobType,\n                                    })\n                                }\n                                resolve();\n                            }\n                        })\n                        .catch(error => console.log(error));\n                        })\n                }\n                data.forEach(user => {\n                    teste(user)\n                })\n                return aux;\n            }\n            if(response.data){\n                let data = response.data;\n                let aux = null;\n                aux = userTimeAction(data);\n                return aux;\n            }\n            // if(response.data){\n            //     let teste = async (userId) => {\n            //         return new Promise((resolve) => {\n            //             useraccess(token, userId)\n            //             .then(data => {\n            //                 if(data !== undefined && data.length > 0){\n            //                     console.log(data);\n            //                     let time = DataParse.parseDate(data[0].date);\n            //                     if(time){\n            //                         newAux = {\n            //                             time: time.day + \" às \" + time.hour,\n            //                             action: data.jobType,\n            //                         }\n            //                     }\n            //                 } \n            //                 resolve();\n            //             })\n            //             .catch(error => console.log(error));\n            //         })\n            //     }\n            //     return auxData;\n            // }\n        })\n        .catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários online\nfunction systemlogs(token){\n    // eslint-disable-next-line \n    return http.\n        post(\"/getloggedusers/\", {\n            token,\n        })\n        .then(response => {\n            return response.data;\n        })\n        .catch(error => console.log(error));\n}\n\n//função que retorna os registros do sistema de um usuário em específico pelo seu ID\nfunction useraccess(token, id){\n    return http.post(\"/getsystemlogsbyuserid/\", {\n        token,\n        id,\n    })\n    .then(response => {return response.data})\n    .catch(error => console.log(error))\n}\n\nconst endpoint = {\n    systemusers,\n    systemlogs,\n    useraccess,\n    infouser,\n};\n\nexport default endpoint;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}