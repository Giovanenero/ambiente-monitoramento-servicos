{"ast":null,"code":"import http from \"./http-common\";\n\n//função que retorna as informações do usuário pelo token\nfunction infouser(token) {\n  return http.post(\"/getuser/\", {\n    token\n  }).then(response => {\n    return response.data;\n  }).catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários do sistema\nfunction systemusers(token) {\n  return http.post(\"/getsystemusers/\", {\n    token\n  }).then(response => {\n    const user = async () => {\n      return new Promise(resolve => {\n        useraccess(token, response.data.userId).then(data => {\n          return data;\n          resolve();\n        }).catch(error => console.log(error));\n      });\n    };\n    const aux = async () => {\n      return await user();\n    };\n\n    //return response.data;\n  }).catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários online\nfunction systemlogs(token) {\n  // eslint-disable-next-line \n  return http.post(\"/getloggedusers/\", {\n    token\n  }).then(response => {\n    return response.data;\n  }).catch(error => console.log(error));\n}\n\n//função que retorna os registros do sistema de um usuário em específico pelo seu ID\nfunction useraccess(token, id) {\n  return http.post(\"/getsystemlogsbyuserid/\", {\n    token,\n    id\n  }).then(response => {\n    return response.data;\n  }).catch(error => console.log(error));\n}\nconst endpoint = {\n  systemusers,\n  systemlogs,\n  useraccess,\n  infouser\n};\nexport default endpoint;","map":{"version":3,"names":["http","infouser","token","post","then","response","data","catch","error","console","log","systemusers","user","Promise","resolve","useraccess","userId","aux","systemlogs","id","endpoint"],"sources":["/home/lapti/ambiente-monitoramento-servicos/src/endpoint/SystemUsers.jsx"],"sourcesContent":["import http from \"./http-common\";\n\n//função que retorna as informações do usuário pelo token\nfunction infouser(token){\n    return http\n        .post(\"/getuser/\", {token})\n        .then(response => {return response.data})\n        .catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários do sistema\nfunction systemusers(token){\n    return http\n        .post(\"/getsystemusers/\", {\n            token,\n        })\n        .then(response => {\n\n            const user = async () => {\n                return new Promise(resolve => {\n                    useraccess(token, response.data.userId)\n                    .then(data => {\n                        return data; \n                        resolve()\n                    })\n                    .catch(error => console.log(error));\n                })\n            }\n\n            const aux = async () => {\n                return await user();\n\n            }\n\n            //return response.data;\n\n\n\n        })\n        .catch(error => console.log(error));\n}\n\n//função que retorna todos os usuários online\nfunction systemlogs(token){\n    // eslint-disable-next-line \n    return http.\n        post(\"/getloggedusers/\", {\n            token,\n        })\n        .then(response => {\n            return response.data;\n        })\n        .catch(error => console.log(error));\n}\n\n//função que retorna os registros do sistema de um usuário em específico pelo seu ID\nfunction useraccess(token, id){\n    return http.post(\"/getsystemlogsbyuserid/\", {\n        token,\n        id,\n    })\n    .then(response => {return response.data})\n    .catch(error => console.log(error))\n}\n\nconst endpoint = {\n    systemusers,\n    systemlogs,\n    useraccess,\n    infouser,\n};\n\nexport default endpoint;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,eAAe;;AAEhC;AACA,SAASC,QAAQ,CAACC,KAAK,EAAC;EACpB,OAAOF,IAAI,CACNG,IAAI,CAAC,WAAW,EAAE;IAACD;EAAK,CAAC,CAAC,CAC1BE,IAAI,CAACC,QAAQ,IAAI;IAAC,OAAOA,QAAQ,CAACC,IAAI;EAAA,CAAC,CAAC,CACxCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AAC3C;;AAEA;AACA,SAASG,WAAW,CAACT,KAAK,EAAC;EACvB,OAAOF,IAAI,CACNG,IAAI,CAAC,kBAAkB,EAAE;IACtBD;EACJ,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAI;IAEd,MAAMO,IAAI,GAAG,YAAY;MACrB,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;QAC1BC,UAAU,CAACb,KAAK,EAAEG,QAAQ,CAACC,IAAI,CAACU,MAAM,CAAC,CACtCZ,IAAI,CAACE,IAAI,IAAI;UACV,OAAOA,IAAI;UACXQ,OAAO,EAAE;QACb,CAAC,CAAC,CACDP,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;MACvC,CAAC,CAAC;IACN,CAAC;IAED,MAAMS,GAAG,GAAG,YAAY;MACpB,OAAO,MAAML,IAAI,EAAE;IAEvB,CAAC;;IAED;EAIJ,CAAC,CAAC,CACDL,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AAC3C;;AAEA;AACA,SAASU,UAAU,CAAChB,KAAK,EAAC;EACtB;EACA,OAAOF,IAAI,CACPG,IAAI,CAAC,kBAAkB,EAAE;IACrBD;EACJ,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAI;IACd,OAAOA,QAAQ,CAACC,IAAI;EACxB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AAC3C;;AAEA;AACA,SAASO,UAAU,CAACb,KAAK,EAAEiB,EAAE,EAAC;EAC1B,OAAOnB,IAAI,CAACG,IAAI,CAAC,yBAAyB,EAAE;IACxCD,KAAK;IACLiB;EACJ,CAAC,CAAC,CACDf,IAAI,CAACC,QAAQ,IAAI;IAAC,OAAOA,QAAQ,CAACC,IAAI;EAAA,CAAC,CAAC,CACxCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AACvC;AAEA,MAAMY,QAAQ,GAAG;EACbT,WAAW;EACXO,UAAU;EACVH,UAAU;EACVd;AACJ,CAAC;AAED,eAAemB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}