{"ast":null,"code":"var _jsxFileName = \"/home/lapti/ambiente-monitoramento-servicos/src/views/pages/Servidor.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./../../assets/views/pages/Servidor.module.css\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, Title, CategoryScale, LinearScale, PointElement, LineElement, Filler } from \"chart.js\";\nimport { Doughnut, Line } from \"react-chartjs-2\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Servidor(_ref) {\n  _s();\n  let {\n    location\n  } = _ref;\n  const props = location.state;\n  const [graphicLeftData, setGraphicLeftData] = useState(null);\n  const [graphicBottomData, setGraphicBottomData] = useState(null);\n  useEffect(() => {\n    ChartJS.register(CategoryScale, LinearScale, PointElement, ArcElement, LineElement, Tooltip, Legend, Title, Filler);\n    //Iniaizaliza os dados e as opções de cada gráfico\n    initializeGrapfichBottom();\n    initializeGraphicLeft();\n    // eslint-disable-next-line\n  }, []);\n  function convertPorcentage(data) {\n    let sum = parseFloat(data[0]) + parseFloat(data[1]);\n    return (parseFloat(data[0]) / sum * 100).toFixed(2);\n  }\n  function initializeGrapfichBottom() {\n    //dados do gráfico de Line(use de CPU e RAM)\n    let graphic = props.graphic;\n    let time = [];\n    graphic.time.forEach(element => {\n      time.push(element.slice(11, 19));\n    });\n    setGraphicBottomData({\n      data: {\n        labels: time.reverse(),\n        datasets: [{\n          label: \"CPU %\",\n          data: graphic.cpu.reverse(),\n          backgroundColor: 'rgba(255, 0, 0, 0.2)',\n          borderColor: 'rgba(255, 0, 0, 0.6)',\n          fill: true,\n          pointRadius: 0,\n          lineTension: 0.2\n        }, {\n          label: 'RAM %',\n          data: graphic.memory.reverse(),\n          backgroundColor: 'rgba(0, 0, 255, 0.2)',\n          borderColor: 'rgba(0, 0, 255, 0.6)',\n          fill: true,\n          pointRadius: 0,\n          lineTension: 0.2\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: \"Uso CPU e RAM\"\n          },\n          legend: {\n            position: \"top\"\n          }\n        }\n      }\n    });\n  }\n  function initializeGraphicLeft() {\n    //dados do gráfico Doughnut(use de disco)\n    let diskUse = props.graphic.disk;\n    let diskTotal = props.graphic.diskTotal;\n    setGraphicLeftData({\n      data: {\n        labels: [\"Utilizado(Gb)\", \"Disponível(Gb)\"],\n        datasets: [{\n          label: \"Disponível(Gb)\",\n          data: [diskUse, diskTotal],\n          backgroundColor: ['rgba(0, 92, 200)', 'rgba(220, 220, 220)']\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          title: {\n            text: \"Uso de disco:\",\n            display: true\n          }\n        }\n      },\n      plugins: [{\n        id: \"textCenter\",\n        beforeDatasetsDraw(chart) {\n          const {\n            ctx,\n            data\n          } = chart;\n          ctx.save();\n          ctx.font = \"700 25px sans-serif\";\n          ctx.fillStyle = \"rgba(0, 92, 200)\";\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n          ctx.fillText(`${convertPorcentage(data.datasets[0].data)}%`, chart.getDatasetMeta(0).data[0].x, chart.getDatasetMeta(0).data[0].y - 10);\n        }\n      }, {\n        id: \"textCenter\",\n        beforeDatasetsDraw(chart) {\n          const {\n            ctx\n          } = chart;\n          ctx.save();\n          ctx.font = \"200 14px sans-serif\";\n          ctx.fillStyle = \"rgba(0, 92, 200)\";\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n          ctx.fillText(\"Utilizado\", chart.getDatasetMeta(0).data[0].x, chart.getDatasetMeta(0).data[0].y + 20);\n        }\n      }]\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#eee\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.containerServidor,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Informa\\xE7\\xF5es do Servidor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contentServidor,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.useDisk,\n          children: graphicLeftData && /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: graphicLeftData.data,\n            options: graphicLeftData.options,\n            plugins: graphicLeftData.plugins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.useGraphic,\n          children: graphicBottomData && /*#__PURE__*/_jsxDEV(Line, {\n            data: graphicBottomData.data,\n            options: graphicBottomData.options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n_s(Servidor, \"e4BrIvSClXLA7gz3fnpi0Da7418=\");\n_c = Servidor;\nexport default Servidor;\nvar _c;\n$RefreshReg$(_c, \"Servidor\");","map":{"version":3,"names":["styles","Chart","ChartJS","ArcElement","Tooltip","Legend","Title","CategoryScale","LinearScale","PointElement","LineElement","Filler","Doughnut","Line","useState","useEffect","Servidor","location","props","state","graphicLeftData","setGraphicLeftData","graphicBottomData","setGraphicBottomData","register","initializeGrapfichBottom","initializeGraphicLeft","convertPorcentage","data","sum","parseFloat","toFixed","graphic","time","forEach","element","push","slice","labels","reverse","datasets","label","cpu","backgroundColor","borderColor","fill","pointRadius","lineTension","memory","options","maintainAspectRatio","responsive","plugins","title","display","text","legend","position","diskUse","disk","diskTotal","id","beforeDatasetsDraw","chart","ctx","save","font","fillStyle","textAlign","textBaseline","fillText","getDatasetMeta","x","y","background","containerServidor","contentServidor","useDisk","useGraphic"],"sources":["/home/lapti/ambiente-monitoramento-servicos/src/views/pages/Servidor.jsx"],"sourcesContent":["import styles from \"./../../assets/views/pages/Servidor.module.css\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, Title, CategoryScale, LinearScale, PointElement, LineElement, Filler } from \"chart.js\"\nimport { Doughnut, Line } from \"react-chartjs-2\";\nimport { useState, useEffect } from \"react\";\n\nfunction Servidor({location}){\n\n    const props = location.state;\n    \n    const [graphicLeftData, setGraphicLeftData] = useState(null)\n    const [graphicBottomData, setGraphicBottomData] = useState(null)\n\n    useEffect(() => {\n        ChartJS.register(CategoryScale, LinearScale, PointElement, ArcElement, LineElement, Tooltip, Legend, Title, Filler);\n        //Iniaizaliza os dados e as opções de cada gráfico\n        initializeGrapfichBottom();\n        initializeGraphicLeft();\n        // eslint-disable-next-line\n    }, []); \n\n    function convertPorcentage(data){\n        let sum = parseFloat(data[0]) + parseFloat(data[1]);\n        return ((parseFloat(data[0]) / sum) * 100).toFixed(2);\n    }\n\n    function initializeGrapfichBottom(){\n        //dados do gráfico de Line(use de CPU e RAM)\n        let graphic = props.graphic;\n        let time = [];\n        graphic.time.forEach(element => {\n            time.push(element.slice(11, 19));\n        })\n        setGraphicBottomData({\n            data: {\n                labels: time.reverse(),\n                datasets: [{\n                    label: \"CPU %\",\n                    data: graphic.cpu.reverse(),\n                    backgroundColor: 'rgba(255, 0, 0, 0.2)',\n                    borderColor: 'rgba(255, 0, 0, 0.6)',\n                    fill: true,\n                    pointRadius: 0,\n                    lineTension: 0.2\n                }, {\n                    label: 'RAM %',\n                    data: graphic.memory.reverse(),\n                    backgroundColor: 'rgba(0, 0, 255, 0.2)',\n                    borderColor: 'rgba(0, 0, 255, 0.6)',\n                    fill: true,\n                    pointRadius: 0,\n                    lineTension: 0.2\n                }]\n            },\n            options: {\n                maintainAspectRatio: false,\n                responsive: true,\n                plugins: {\n                    title: {\n                        display: true,\n                        text: \"Uso CPU e RAM\"\n                    },\n                    legend: {\n                        position: \"top\"\n                    },\n                },\n            }\n        })\n    }\n\n    function initializeGraphicLeft(){\n        //dados do gráfico Doughnut(use de disco)\n        let diskUse = props.graphic.disk;\n        let diskTotal = props.graphic.diskTotal;\n        setGraphicLeftData({data: {\n            labels: [\"Utilizado(Gb)\", \"Disponível(Gb)\"],\n            datasets: [{\n                label: \"Disponível(Gb)\",\n                data: [diskUse, diskTotal],\n                backgroundColor: ['rgba(0, 92, 200)', 'rgba(220, 220, 220)']\n            }]\n            }, options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    title: {\n                        text: \"Uso de disco:\", display: true\n                    },\n                },\n            }, plugins: [\n                {\n                    id: \"textCenter\",\n                    beforeDatasetsDraw(chart){\n                        const {ctx, data} = chart;\n                        ctx.save();\n                        ctx.font = \"700 25px sans-serif\";\n                        ctx.fillStyle = \"rgba(0, 92, 200)\";\n                        ctx.textAlign = \"center\";\n                        ctx.textBaseline = \"middle\";\n                        ctx.fillText(`${convertPorcentage(data.datasets[0].data)}%`, chart.getDatasetMeta(0).data[0].x,  chart.getDatasetMeta(0).data[0].y -10);\n                    }\n                }, {\n                    id: \"textCenter\",\n                    beforeDatasetsDraw(chart){\n                        const {ctx} = chart;\n                        ctx.save();\n                        ctx.font = \"200 14px sans-serif\";\n                        ctx.fillStyle = \"rgba(0, 92, 200)\";\n                        ctx.textAlign = \"center\";\n                        ctx.textBaseline = \"middle\";\n                        ctx.fillText(\"Utilizado\", chart.getDatasetMeta(0).data[0].x,  chart.getDatasetMeta(0).data[0].y + 20);\n                    }\n                }\n            ]\n        });\n    }\n\n    return (    \n        <div style={{background: \"#eee\"}}>\n            <div className={styles.containerServidor}>\n                <p>Informações do Servidor</p>\n                <div className={styles.contentServidor}>\n                    <div className={styles.useDisk}>\n                        {graphicLeftData && \n                            <Doughnut \n                                data={graphicLeftData.data} \n                                options={graphicLeftData.options} \n                                plugins={graphicLeftData.plugins}\n                            />}\n                    </div>\n                    <div className={styles.useGraphic}>\n                        {graphicBottomData && <Line data={graphicBottomData.data} options={graphicBottomData.options}/>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Servidor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}